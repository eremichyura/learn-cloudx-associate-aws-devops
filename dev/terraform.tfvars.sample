#########################################################################
#               BASE SETTINGS                                           #
#########################################################################

aws_region_name = ""
aws_access_key_id = ""
aws_secret_key = ""

docker_host = ""

docker_registry_auth = {
  address  = "registry.hub.docker.com"
  username = ""
  password = ""
}


#########################################################################
#                              VPC                                      #
#########################################################################

#----------------------------  VPC  ------------------------------------#

vpc_cidr_block = ""
vpc_dns_support_enabled = true/false
vpc_dns_hostnames_enabled = true/false
vpc_tags = {
  Name = ""
}

#-----------------------------  IGW  -----------------------------------#

igw_tags = {
  Name = "" 
}

#----------------------------SUBNETS -----------------------------------#

####### subnet A

subnet_public_a_cidr = ""
subnet_public_a_az = ""
subnet_public_a_tags = {
  Name = ""
}

####### subnet B

subnet_public_b_cidr = ""
subnet_public_b_az = ""
subnet_public_b_tags = {
  Name = ""
}

####### subnet C

subnet_public_c_cidr = ""
subnet_public_c_az = ""
subnet_public_c_tags = {
  Name = ""
}

database_subnets = [
  {
    availability_zone = ""
    cidr_block        = ""
    name              = ""
    tags = {
      "" = ""
    }
  },
  {
    availability_zone = ""
    cidr_block        = ""
    name              = ""
    tags = {
      "" = ""
    }
  },
  {
    availability_zone = ""
    cidr_block        = ""
    name              = ""
    tags = {
      "Name" = ""
    }
  }
]


#----------------------  ROUTE TABLES  -------------------------------#

public_rt_route_cidr = ""

public_rt_tags = {
  Name = ""
}


database_private_route_table_tags = {
  "" = ""
}

#########################################################################
#                           VPC ENDPOINTS                               #
#########################################################################




#########################################################################
#                           SECURITY                                    #
#########################################################################

#-------------------------  SECURITY GROUPS  ---------------------------#

security_groups_with_rules = {
  "" = {
    description = "",
    sg_tags = {
      "" = "",
      "" = ""
    }
    rules = [
      ["", "", "", "", "", ""],
      ["", "", "", "", "", ""]
    ]
  }
   "" = {
    description = "",
    sg_tags = {
      "" = "",
      "" = ""
    }
    rules = [
      ["", "", "", "", "", ""],
      ["", "", "", "", "", ""]
    ]
  }
}

#--------------------------  SSH KEY PAIR  -----------------------------#

ssh_public_key = {
  name = ""
  public_key = <<-EOF
    put your key hear
    EOF
  key_tags   = {
    "" = "",
    "" = ""    
  }
}

#########################################################################
#                              IAM                                      #
#########################################################################

#-----------------------------  IAM POLICY -----------------------------#

iam_policy = {
  name        = ""
  path        = ""
  description = ""
  policy_tags = {
    "" = "",
    "" = ""    
  }
  statements = {
    s1 = {
      actions = [
        "",
        ""
      ]
      resources = [""]
      effect    = ""
    }
  }
}


iam_ecr_policy = <<-EOF
{
    "Version": "2008-10-17",
    "Statement": [
        {
            "Sid": "new policy",
            "Effect": "Allow",
            "Principal": "*",
            "Action": [
            ]
        }
    ]
}
EOF

#------------------------------  IAM ROLE  -----------------------------#

iam_role = {
  name        = ""
  description = ""
  path        = ""
  role_tags = {
    "" = ""
  }
  statements = {
    "" = {
      actions = [
        ""
      ]
      principals = {
        "" : ["",""]
      }
      effect = ""
    }
  }
}

#-----------------------  INSTANCE PROFILE  ----------------------------#

instance_profile = {
  Name = ""
  tags = {
    "" = ""
  }
}

#########################################################################
#                              EFS                                      #
#########################################################################

efs = {
  tags = {
    "" = ""
  }
}

#########################################################################
#                              ALB                                      #
#########################################################################

#----------------------------  ALB  ------------------------------------#
alb = {
  name               = ""
  alb_security_group_name = ""
  load_balancer_type = ""
  internal           = true/false
  tags = {
    "" = ""
  }
}

#------------------------  TARGET_GROUP  -------------------------------#

alb_target_group = {
  name     = ""
  port     = ""
  protocol = ""
  tags = {
    "" = ""
  }
}

#------------------------  ALB_LISTENER  -------------------------------#

alb_listener = {
  port                      = ""
  protocol                  = ""
   default_action_priority  = put here number 
  default_action_type       = ""
  tags = {
    "" = ""
  }
}

#########################################################################
#                              ASG                                      #
#########################################################################

#-------------------------  LAUNCH TEMPLATE  ---------------------------#

launch_template = {
  name                                           = ""
  instance_type                                  = ""
  image_id                                       = ""
  instance_initiated_shutdown_behavior           = ""
  network_interfaces_associate_public_ip_address = true/false
  network_interfaces_ec2_pool_name               = ""
  network_interfaces_device_index                = number
}

#------------------------------  ASG  ----------------------------------#

asg = {
  name                    = ""
  capacity_rebalance      = false/true
  desired_capacity        = number
  max_size                = number
  min_size                = number
  health_check_type       = ""
  launch_template_version = ""
}

#########################################################################
#                              BASTION                                  #
#########################################################################

bastion_ec2 = {
  instance_type               = ""
  image_id                    = ""
  monitoring                  = false/true
  associate_public_ip_address = true/false
  bastion_sg_name             = string
  tags = {
    "" = ""
  }
}

#########################################################################
#                                 RDS                                   #
#########################################################################

ghost_mysql_db_subnet_group = {
  description = ""
  name        = ""
  tags = {
    "" = ""
  }
}

mysql_db_security_group_name = ""

rds_creds = {
  database_name     = ""
  database_password = ""
  database_user     = ""
}

rds_db_instantce_params = {
  allocated_storage = number
  storage_type      = ""
  engine            = ""
  engine_version    = ""
  instance_class    = ""
  tags = {
    "" = ""
  }
}


#########################################################################
#                                 ECR                                   #
#########################################################################
ghost_image_name = "ghost"

ghost_image_tag  = "4.12.0"

aws_image_repository = {
  name                 = "ghost"
  scan_on_push         = false
  image_tag_mutability = "IMMUTABLE"
  encryption_type      = "AES256"
  tags = {
    Name = "ghost"
  }
}

#########################################################################
#                                 ECS                                   #
#########################################################################

ghost_ecs_cluster = {
  name          = "ghost"
  setting_name  = "containerInsights"
  setting_value = "enabled"
}

ghost_ecs_service = {
  name                                 = "ghost-fargate-service"
  launch_type                          = "FARGATE"
  desired_count                        = 1
  health_check_grace_period_seconds    = 120
  wait_for_steady_state                = true
  load_balancer_container_name         = "ghost_container"
  load_balancer_container_port         = 2368
  network_configuration_security_group = "fargate_pool"
  assign_public_ip                     = true
}

ghost_ecs_container_def = {
  name                                   = "ghost_container"
  essential                              = true
  environment_database__client           = "mysql"
  environment_NODE_ENV                   = "development"
  portMappings_protocol                  = "tcp"
  portMappings_containerPort             = 2368
  mountPoints_containerPath              = "/var/lib/ghost/content"
  mountPoints_sourceVolume               = "ghost_content"
  logConfiguration_logDriver             = "awslogs"
  logConfiguration_awslogs-stream-prefix = "application"
}

ghost_ecs_task_def = {
  network_mode             = "awsvpc"
  requires_compatibilities = ["FARGATE"]
  memory                   = 1024
  cpu                      = 512
  family                   = "ghost"
  name                     = "ghost_content"
  volume_name              = "ghost_content"
  tags = {
    Name = "task_def_ghost"
  }
}